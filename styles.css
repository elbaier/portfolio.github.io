.pagecontainer {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: .2fr .2fr 1fr .2fr;
  margin: auto;
  width: 90vw;
  background-color: #e6e6ff;
}

h1 {
  font-family: 'Kameron', serif;
}

nav ul li {
font-family: 'Signika', sans-serif;
}

h2 {
font-family: 'Signika', sans-serif;
}

/*This is the container div where you declare CSS grid display
and set up how many columns and rows are needed for the image grid.
You could then go on to position each div on the grid though if
they are equidistant it is not necessary.
fr is a fractional, scalable unit for relative portions of the page,
but you can use other units like pixels too

.image-container-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr 1fr;
  grid-gap: 2rem;
  max-width: 60vw;
  margin: auto;
  background: green;

}

.imagebox {
  padding: 1rem;
  background: yellow;

}

img {
  width: 100%;
}
/* You could add grid postioning here for these child items of the grid container and other unique styleing
.project1 {}
.project2 {}
.project3 {}
.project4 {} */
